1
00:00:00,000 --> 00:00:00,000
This video shows the steps taken to erase a node in the middle of a LinkedSequence object.

2
00:00:00,000 --> 00:00:00,000
In this example, we want to remove the node of 76.

3
00:00:00,000 --> 00:00:00,000
 This can be done by setting the next pointer of the node 95 to point at the node of 85.

4
00:00:00,000 --> 00:00:00,000
Therefore, we need to first get a hold of the node 95, which is at pos - 1.

5
00:00:00,000 --> 00:00:00,000
We have set up two variables.

6
00:00:00,000 --> 00:00:00,000
ptr is a pointer variable, pointing to a Node object.

7
00:00:00,000 --> 00:00:00,000
The index variable tracks the position of the node pointed by ptr.

8
00:00:00,000 --> 00:00:00,000
Before the loop ptr points to the first node, index is 0.

9
00:00:00,000 --> 00:00:00,000
The two statements in the loop are to move ptr down to its next node and increase index by 1.

10
00:00:00,000 --> 00:00:00,000
When we move ptr to the node of 67, index becomes 1.

11
00:00:00,000 --> 00:00:00,000
When ptr points to the node of 93, index is 2.

12
00:00:00,000 --> 00:00:00,000
The question is what loop condition we should use to help us move ptr to the node of 95.

13
00:00:00,000 --> 00:00:00,000
To help us figure that out, let’s first experiment with the condition of index less than 2 to see how far we could move ptr.

14
00:00:00,000 --> 00:00:00,000
At the beginning, index is 0, 0 less than 2 is true.

15
00:00:00,000 --> 00:00:00,000
The loop body is executed, changing ptr to the node of 67 and index to 1.

16
00:00:00,000 --> 00:00:00,000
Since 1 less than 2 is true, the loop body is executed again, changing ptr to the node of 93 and index to 2.

17
00:00:00,000 --> 00:00:00,000
Now 2 less than 2 is false, the loop stops.

18
00:00:00,000 --> 00:00:00,000
Therefore, using the condition of index less than 2 helps us move ptr to the node whose position in the sequence is 2.

19
00:00:00,000 --> 00:00:00,000
Pause the video and think about how we should set the loop condition if we want to move the pointer to the node of 95.

20
00:00:00,000 --> 00:00:00,000
Resume the video when you are ready.

21
00:00:00,000 --> 00:00:00,000
Yes, we will need to set the loop condition to index less than pos - 1.

22
00:00:00,000 --> 00:00:00,000
This will allow us to move ptr to a node at pos – 1 at the end of the loop.

23
00:00:00,000 --> 00:00:00,000
Now we are ready to connect the next data member for the node of 95 with the node of 85.

24
00:00:00,000 --> 00:00:00,000
Pause the video and think about how we can reach the node of 76 via the ptr variable.

25
00:00:00,000 --> 00:00:00,000
Resume the video when you are ready.

26
00:00:00,000 --> 00:00:00,000
Yes, ptr next  is pointing at the node of 76.

27
00:00:00,000 --> 00:00:00,000
Let’s use a new temporary pointer to point at this node. This will allow us to release the memory units associated with the node of 76 after it is removed from the sequence.

28
00:00:00,000 --> 00:00:00,000
This also allows us to reference the node of 85 as temp next.

29
00:00:00,000 --> 00:00:00,000
Pause the video and think about how we can connect the node of 95 with the node of 85. Resume the video when you are ready.

30
00:00:00,000 --> 00:00:00,000
Here is what we can do to by pass the node of 75.

31
00:00:00,000 --> 00:00:00,000
As a result, the node of 75 is no longer part of the sequence

32
00:00:00,000 --> 00:00:00,000
Pause the video and think about what important step we need to take next in order to prevent memory leak. Resume the video when you are ready.

33
00:00:00,000 --> 00:00:00,000
Yes, we need to release the memory units associated with the node of 75 using the delete operator. 

34
00:00:00,000 --> 00:00:00,000
Had we missed this step in our program, we would have caused a memory leak.

